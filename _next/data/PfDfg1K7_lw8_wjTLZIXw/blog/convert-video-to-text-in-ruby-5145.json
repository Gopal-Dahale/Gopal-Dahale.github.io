{"pageProps":{"articleContent":"<h1><strong>Setup on <a href=\"https://console.cloud.google.com\">Google Cloud Console</a></strong></h1>\n<ul>\n<li>Create a Project e.g My-Project</li>\n<li>Start your free trial on Google Cloud Platform by adding credit card because the credit card is required for a free trial</li>\n<li>Create or select a project</li>\n<li>Enable the Cloud <a href=\"https://cloud.google.com/speech-to-text\">Speech-to-Text</a> API for that project.</li>\n<li>Create a service account.\nIAM -> Service Accounts -> Create Service Account</li>\n<li>Download a private key as JSON.</li>\n<li>Create a Bucket. <a href=\"https://cloud.google.com/storage\">Google Cloud Storage</a> -> Browse</li>\n</ul>\n<h1><strong>Installations on Local System</strong></h1>\n<p>Run these command from a terminal</p>\n<ul>\n<li>\n<p><strong>Install Google Cloud Storage gem</strong></p>\n<p>gem install google-cloud-storage</p>\n</li>\n<li>\n<p><strong>Install Google Cloud Speech gem</strong></p>\n<p>gem install google-cloud-speech</p>\n</li>\n<li>\n<p><strong>Install ffmpeg</strong>\nsudo apt-get install ffmpeg (Ubuntu)\nbrew install ffmpeg (Mac)</p>\n</li>\n</ul>\n<h1><strong>Ruby Code</strong></h1>\n<div class=\"remark-highlight\"><pre class=\"language-Ruby\"><code class=\"language-Ruby\">require &#x26;quot;google/cloud/speech&#x26;quot;\nrequire &#x26;quot;google/cloud/storage&#x26;quot;\n\n#Google cloud project id\nproject_id = &#x26;quot;google_cloud_project_id&#x26;quot;\n#Downloaded key file\nkey_file   = &#x26;quot;file_name.json&#x26;quot;</code></pre></div>\n<h3><strong>Convert video to aduio</strong></h3>\n<p>Convert Video file to audio file using ffmpeg.</p>\n<p><strong>What is FLAC?</strong>\nFLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality.</p>\n<p>We will use both of these commands for better results.</p>\n<div class=\"remark-highlight\"><pre class=\"language-Ruby\"><code class=\"language-Ruby\">system &#x26;quot;ffmpeg -i video.mp4 aduio_temp.flac&#x26;quot;\nsystem &#x26;quot;ffmpeg -i audio_temp.flac -ac 1 audio_final.flac&#x26;quot;</code></pre></div>\n<h3><strong>Upload audio to Google Storage</strong></h3>\n<p>First access project by Storage API. Then create a new file in the bucket which will be a copy of adio_final.flac.</p>\n<p><strong>Note</strong>: Here I'm using the first bucket on Google Cloud Storage. If you have more than one buckets then you can select any storage bucket that you want.</p>\n<div class=\"remark-highlight\"><pre class=\"language-Ruby\"><code class=\"language-Ruby\">storage = Google::Cloud::Storage.new project: project_id, keyfile: key_file\nbucket_name = storage.buckets.first.name\nputs bucket_name\nbucket  = storage.bucket bucket_name\nlocal_file_path = &#x26;#39;audio_final.flac&#x26;#39;\nfile = bucket.create_file local_file_path, &#x26;#39;audio_cloud.flac&#x26;#39;\nputs &#x26;quot;Uploaded #{file.name}&#x26;quot;</code></pre></div>\n<h3><strong>Translate Audio to Text</strong></h3>\n<p>Now we'll convert the audio that we uploaded on Cloud Storage to text.\nAccess that file in the following mentioned way gs://bucket-name/file-name. We can use different language_code as if we are using German-language video then \"de-DE\" etc</p>\n<div class=\"remark-highlight\"><pre class=\"language-Ruby\"><code class=\"language-Ruby\">speech = Google::Cloud::Speech.new\nstorage_path = &#x26;quot;gs://audio_bucket-1/audio_cloud.flac&#x26;quot;\n\nconfig = { encoding: :FLAC,\n        language_code: &#x26;quot;en-US&#x26;quot; }\naudio = { uri: storage_path }\noperation = speech.long_running_recognize config, audio\n\naudio_text = &#x26;#39;&#x26;#39;\nputs &#x26;quot;Operation started&#x26;quot;\nif !operation.nil?\n    operation.wait_until_done!\n    raise operation.results.message if operation.error?\n    results = operation.response.results\n    results.each do |result|\n        audio_text &#x26;lt;&#x26;lt; result.alternatives.first.transcript\n        puts &#x26;quot;Transcription: #{result.alternatives.first.transcript}&#x26;quot;\n    end\nend\n\nputs audio_text</code></pre></div>\n<p>Before running this script set the Google Application Credentials.</p>\n<div class=\"remark-highlight\"><pre class=\"language-Ruby\"><code class=\"language-Ruby\">export GOOGLE_APPLICATION_CREDENTIALS=&#x26;quot;/home/user/Downloads/file_name.json&#x26;quot;</code></pre></div>\n<p>Now run this script.</p>\n<div class=\"remark-highlight\"><pre class=\"language-Ruby\"><code class=\"language-Ruby\">ruby translate_video_to_text.rb</code></pre></div>\n<p>You can find the complete code on Github.\nCheck it on <a href=\"https://github.com/MA-Ahmad/Video-to-text/blob/master/translate_video_to_text.rb\">Github</a></p>\n","blogDetails":{"type_of":"article","id":315354,"title":"Convert Video to text in Ruby","description":"Setup on Google Cloud Console    Create a Project e.g My-Project Start your free trial on Go...","readable_publish_date":"Apr 20 '20","slug":"convert-video-to-text-in-ruby-5145","path":"/m_ahmad/convert-video-to-text-in-ruby-5145","url":"https://dev.to/m_ahmad/convert-video-to-text-in-ruby-5145","comments_count":1,"public_reactions_count":14,"collection_id":null,"published_timestamp":"2020-04-20T23:05:43Z","positive_reactions_count":14,"cover_image":null,"social_image":"https://dev.to/social_previews/article/315354.png","canonical_url":"https://dev.to/m_ahmad/convert-video-to-text-in-ruby-5145","created_at":"2020-04-20T23:02:35Z","edited_at":null,"crossposted_at":null,"published_at":"2020-04-20T23:05:43Z","last_comment_at":"2021-06-04T05:20:21Z","reading_time_minutes":2,"tag_list":"ruby, webdev, rails, opensource","tags":["ruby","webdev","rails","opensource"],"body_html":"<h1>\n  <a name=\"setup-on-google-cloud-console\" href=\"#setup-on-google-cloud-console\">\n  </a>\n  <strong>Setup on <a href=\"https://console.cloud.google.com\">Google Cloud Console</a></strong>\n</h1>\n\n<ul>\n<li>Create a Project e.g My-Project</li>\n<li>Start your free trial on Google Cloud Platform by adding credit card because the credit card is required for a free trial</li>\n<li>Create or select a project</li>\n<li>Enable the Cloud <a href=\"https://cloud.google.com/speech-to-text\">Speech-to-Text</a> API for that project.</li>\n<li>Create a service account.\nIAM -&gt; Service Accounts -&gt; Create Service Account</li>\n<li>Download a private key as JSON.</li>\n<li>Create a Bucket. <a href=\"https://cloud.google.com/storage\">Google Cloud Storage</a> -&gt; Browse</li>\n</ul>\n\n<h1>\n  <a name=\"installations-on-local-system\" href=\"#installations-on-local-system\">\n  </a>\n  <strong>Installations on Local System</strong>\n</h1>\n\n<p>Run these command from a terminal</p>\n\n<ul>\n<li>\n<p><strong>Install Google Cloud Storage gem</strong></p>\n\n<p>gem install google-cloud-storage</p>\n</li>\n<li>\n<p><strong>Install Google Cloud Speech gem</strong> </p>\n\n<p>gem install google-cloud-speech</p>\n</li>\n<li><p><strong>Install ffmpeg</strong><br>\n sudo apt-get install ffmpeg (Ubuntu)<br>\n brew install ffmpeg (Mac)</p></li>\n</ul>\n\n<h1>\n  <a name=\"ruby-code\" href=\"#ruby-code\">\n  </a>\n  <strong>Ruby Code</strong>\n</h1>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"nb\">require</span> <span class=\"s2\">\"google/cloud/speech\"</span>\n<span class=\"nb\">require</span> <span class=\"s2\">\"google/cloud/storage\"</span>\n\n<span class=\"c1\">#Google cloud project id</span>\n<span class=\"n\">project_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"google_cloud_project_id\"</span>\n<span class=\"c1\">#Downloaded key file</span>\n<span class=\"n\">key_file</span>   <span class=\"o\">=</span> <span class=\"s2\">\"file_name.json\"</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"convert-video-to-aduio\" href=\"#convert-video-to-aduio\">\n  </a>\n  <strong>Convert video to aduio</strong>\n</h3>\n\n<p>Convert Video file to audio file using ffmpeg. </p>\n\n<p><strong>What is FLAC?</strong><br>\nFLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality.</p>\n\n<p>We will use both of these commands for better results.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"nb\">system</span> <span class=\"s2\">\"ffmpeg -i video.mp4 aduio_temp.flac\"</span>\n<span class=\"nb\">system</span> <span class=\"s2\">\"ffmpeg -i audio_temp.flac -ac 1 audio_final.flac\"</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"upload-audio-to-google-storage\" href=\"#upload-audio-to-google-storage\">\n  </a>\n  <strong>Upload audio to Google Storage</strong>\n</h3>\n\n<p>First access project by Storage API. Then create a new file in the bucket which will be a copy of adio_final.flac.</p>\n\n<p><strong>Note</strong>: Here I'm using the first bucket on Google Cloud Storage. If you have more than one buckets then you can select any storage bucket that you want.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"no\">Google</span><span class=\"o\">::</span><span class=\"no\">Cloud</span><span class=\"o\">::</span><span class=\"no\">Storage</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"ss\">project: </span><span class=\"n\">project_id</span><span class=\"p\">,</span> <span class=\"ss\">keyfile: </span><span class=\"n\">key_file</span>\n<span class=\"n\">bucket_name</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"p\">.</span><span class=\"nf\">buckets</span><span class=\"p\">.</span><span class=\"nf\">first</span><span class=\"p\">.</span><span class=\"nf\">name</span>\n<span class=\"nb\">puts</span> <span class=\"n\">bucket_name</span>\n<span class=\"n\">bucket</span>  <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"p\">.</span><span class=\"nf\">bucket</span> <span class=\"n\">bucket_name</span>\n<span class=\"n\">local_file_path</span> <span class=\"o\">=</span> <span class=\"s1\">'audio_final.flac'</span>\n<span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"p\">.</span><span class=\"nf\">create_file</span> <span class=\"n\">local_file_path</span><span class=\"p\">,</span> <span class=\"s1\">'audio_cloud.flac'</span>\n<span class=\"nb\">puts</span> <span class=\"s2\">\"Uploaded </span><span class=\"si\">#{</span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"nf\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"translate-audio-to-text\" href=\"#translate-audio-to-text\">\n  </a>\n  <strong>Translate Audio to Text</strong>\n</h3>\n\n<p>Now we'll convert the audio that we uploaded on Cloud Storage to text.<br>\nAccess that file in the following mentioned way gs://bucket-name/file-name. We can use different language_code as if we are using German-language video then \"de-DE\" etc<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"n\">speech</span> <span class=\"o\">=</span> <span class=\"no\">Google</span><span class=\"o\">::</span><span class=\"no\">Cloud</span><span class=\"o\">::</span><span class=\"no\">Speech</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n<span class=\"n\">storage_path</span> <span class=\"o\">=</span> <span class=\"s2\">\"gs://audio_bucket-1/audio_cloud.flac\"</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">encoding: :FLAC</span><span class=\"p\">,</span>\n        <span class=\"ss\">language_code: </span><span class=\"s2\">\"en-US\"</span> <span class=\"p\">}</span>\n<span class=\"n\">audio</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">uri: </span><span class=\"n\">storage_path</span> <span class=\"p\">}</span>\n<span class=\"n\">operation</span> <span class=\"o\">=</span> <span class=\"n\">speech</span><span class=\"p\">.</span><span class=\"nf\">long_running_recognize</span> <span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">audio</span>\n\n<span class=\"n\">audio_text</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n<span class=\"nb\">puts</span> <span class=\"s2\">\"Operation started\"</span>\n<span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"nf\">nil?</span>\n    <span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"nf\">wait_until_done!</span>\n    <span class=\"k\">raise</span> <span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"nf\">results</span><span class=\"p\">.</span><span class=\"nf\">message</span> <span class=\"k\">if</span> <span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"nf\">error?</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"nf\">response</span><span class=\"p\">.</span><span class=\"nf\">results</span>\n    <span class=\"n\">results</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">result</span><span class=\"o\">|</span>\n        <span class=\"n\">audio_text</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"nf\">alternatives</span><span class=\"p\">.</span><span class=\"nf\">first</span><span class=\"p\">.</span><span class=\"nf\">transcript</span>\n        <span class=\"nb\">puts</span> <span class=\"s2\">\"Transcription: </span><span class=\"si\">#{</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"nf\">alternatives</span><span class=\"p\">.</span><span class=\"nf\">first</span><span class=\"p\">.</span><span class=\"nf\">transcript</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n    <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"nb\">puts</span> <span class=\"n\">audio_text</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Before running this script set the Google Application Credentials.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"n\">export</span> <span class=\"no\">GOOGLE_APPLICATION_CREDENTIALS</span><span class=\"o\">=</span><span class=\"s2\">\"/home/user/Downloads/file_name.json\"</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now run this script.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"n\">ruby</span> <span class=\"n\">translate_video_to_text</span><span class=\"p\">.</span><span class=\"nf\">rb</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>You can find the complete code on Github.<br>\nCheck it on <a href=\"https://github.com/MA-Ahmad/Video-to-text/blob/master/translate_video_to_text.rb\">Github</a></p>\n\n","body_markdown":"# **Setup on [Google Cloud Console](https://console.cloud.google.com)**\n* Create a Project e.g My-Project\n* Start your free trial on Google Cloud Platform by adding credit card because the credit card is required for a free trial\n* Create or select a project\n* Enable the Cloud [Speech-to-Text](https://cloud.google.com/speech-to-text) API for that project.\n* Create a service account.\n  IAM -> Service Accounts -> Create Service Account\n* Download a private key as JSON.\n* Create a Bucket. [Google Cloud Storage](https://cloud.google.com/storage) -> Browse\n\n\n\n# **Installations on Local System**\n Run these command from a terminal\n  * **Install Google Cloud Storage gem**\n\n     gem install google-cloud-storage\n\n  * **Install Google Cloud Speech gem** \n\n     gem install google-cloud-speech\n\n  * **Install ffmpeg**\n     sudo apt-get install ffmpeg (Ubuntu)\n     brew install ffmpeg (Mac)\n\n# **Ruby Code**\n```Ruby\nrequire \"google/cloud/speech\"\nrequire \"google/cloud/storage\"\n\n#Google cloud project id\nproject_id = \"google_cloud_project_id\"\n#Downloaded key file\nkey_file   = \"file_name.json\"\n```\n\n### **Convert video to aduio**\nConvert Video file to audio file using ffmpeg. \n\n**What is FLAC?**\nFLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality.\n\nWe will use both of these commands for better results.\n```Ruby\nsystem \"ffmpeg -i video.mp4 aduio_temp.flac\"\nsystem \"ffmpeg -i audio_temp.flac -ac 1 audio_final.flac\"\n ```\n\n### **Upload audio to Google Storage**\n\nFirst access project by Storage API. Then create a new file in the bucket which will be a copy of adio_final.flac.\n\n**Note**: Here I'm using the first bucket on Google Cloud Storage. If you have more than one buckets then you can select any storage bucket that you want.\n\n```Ruby\nstorage = Google::Cloud::Storage.new project: project_id, keyfile: key_file\nbucket_name = storage.buckets.first.name\nputs bucket_name\nbucket  = storage.bucket bucket_name\nlocal_file_path = 'audio_final.flac'\nfile = bucket.create_file local_file_path, 'audio_cloud.flac'\nputs \"Uploaded #{file.name}\"\n```\n\n### **Translate Audio to Text**\nNow we'll convert the audio that we uploaded on Cloud Storage to text.\nAccess that file in the following mentioned way gs://bucket-name/file-name. We can use different language_code as if we are using German-language video then \"de-DE\" etc\n \n```Ruby\nspeech = Google::Cloud::Speech.new\nstorage_path = \"gs://audio_bucket-1/audio_cloud.flac\"\n\nconfig = { encoding: :FLAC,\n        language_code: \"en-US\" }\naudio = { uri: storage_path }\noperation = speech.long_running_recognize config, audio\n\naudio_text = ''\nputs \"Operation started\"\nif !operation.nil?\n    operation.wait_until_done!\n    raise operation.results.message if operation.error?\n    results = operation.response.results\n    results.each do |result|\n        audio_text << result.alternatives.first.transcript\n        puts \"Transcription: #{result.alternatives.first.transcript}\"\n    end\nend\n\nputs audio_text\n```\n \nBefore running this script set the Google Application Credentials.\n```Ruby\nexport GOOGLE_APPLICATION_CREDENTIALS=\"/home/user/Downloads/file_name.json\"\n```\n\nNow run this script.\n```Ruby\nruby translate_video_to_text.rb\n```\nYou can find the complete code on Github.\nCheck it on [Github](https://github.com/MA-Ahmad/Video-to-text/blob/master/translate_video_to_text.rb)\n","user":{"name":"Muhammad  Ahmad","username":"m_ahmad","twitter_username":null,"github_username":"MA-Ahmad","website_url":"https://mahmad.me","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--FaWR2rO8--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370400/bda2fd3e-cb65-4abb-81e6-1f50edf567dd.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--qXP9l9Gp--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370400/bda2fd3e-cb65-4abb-81e6-1f50edf567dd.png"}}},"__N_SSG":true}